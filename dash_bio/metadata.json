{
  "src/lib/components/DashMolecule3d.js": {
    "description": "",
    "displayName": "DashMolecule3d",
    "methods": [
      {
        "name": "onChangeSelection",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "selectedAtomIds",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "onRenderNewData",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "glviewer",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in callbacks"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever properties change"
      },
      "selectionType": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The selection type - may be atom, residue or chain"
      },
      "backgroundColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Property to change the background color of the molecule viewer"
      },
      "backgroundOpacity": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Property to change the backgroun opacity - ranges from 0 to 1"
      },
      "styles": {
        "type": {
          "name": "objectOf",
          "value": {
            "name": "object"
          }
        },
        "required": false,
        "description": "Property that can be used to change the representation of\r\nthe molecule. Options include sticks, cartoon and sphere"
      },
      "modelData": {
        "type": {
          "name": "shape",
          "value": {
            "atoms": {
              "name": "array",
              "required": false
            },
            "bonds": {
              "name": "array",
              "required": false
            }
          }
        },
        "required": false,
        "description": "The data that will be used to display the molecule in 3D\r\nThe data will be in JSON format \r\nand should have two main dictionaries - atoms, bonds"
      },
      "atomLabelsShown": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Property to either show or hide labels"
      },
      "selectedAtomIds": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "Property that stores a list of all selected atoms"
      },
      "labels": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "labels corresponding to the atoms of the molecule"
      },
      "onRenderNewData": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback to re-render molecule viewer\r\nwhen modelData is changed"
      },
      "onChangeSelection": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback to change append selectedAtomIds \r\nwhen a selection is made"
      }
    }
  },
  "src/lib/components/NeedlePlot.react.js": {
    "description": "",
    "displayName": "NeedlePlot",
    "methods": [
      {
        "name": "handleChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "prepareTraces",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "prepareLayout",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "vars",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "x": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "array"
            }
          ]
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "y": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "array"
            }
          ]
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "mutationGroups": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "domains": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "xlabel": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "ylabel": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "rangeSlider": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "needleStyle": {
        "type": {
          "name": "shape",
          "value": {
            "stemColor": {
              "name": "string",
              "required": false
            },
            "stemThickness": {
              "name": "number",
              "required": false
            },
            "stemConstHeight": {
              "name": "bool",
              "required": false
            },
            "headSize": {
              "name": "number",
              "required": false
            },
            "headColor": {
              "name": "union",
              "value": [
                {
                  "name": "array"
                },
                {
                  "name": "string"
                }
              ],
              "required": false
            },
            "headSymbol": {
              "name": "union",
              "value": [
                {
                  "name": "array"
                },
                {
                  "name": "string"
                }
              ],
              "required": false
            }
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{\r\n    stemColor: '#444',\r\n    stemThickness: 0.5,\r\n    stemConstHeight: false,\r\n    headSize: 5,\r\n    headColor: [\r\n        '#e41a1c',\r\n        '#377eb8',\r\n        '#4daf4a',\r\n        '#984ea3',\r\n        '#ff7f00',\r\n        '#ffff33',\r\n        '#a65628',\r\n        '#f781bf',\r\n        '#999999',\r\n        '#e41a1c',\r\n        '#377eb8',\r\n        '#4daf4a',\r\n        '#984ea3',\r\n        '#ff7f00',\r\n        '#ffff33',\r\n        '#a65628',\r\n        '#f781bf',\r\n        '#999999',\r\n        '#e41a1c',\r\n    ],\r\n    headSymbol: 'circle',\r\n}",
          "computed": false
        }
      },
      "domainStyle": {
        "type": {
          "name": "shape",
          "value": {
            "domainColor": {
              "name": "array",
              "required": false
            },
            "displayMinorDomains": {
              "name": "bool",
              "required": false
            }
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{\r\n    displayMinorDomains: false,\r\n    domainColor: [\r\n        '#8dd3c7',\r\n        '#ffffb3',\r\n        '#bebada',\r\n        '#fb8072',\r\n        '#80b1d3',\r\n        '#fdb462',\r\n        '#b3de69',\r\n        '#fccde5',\r\n        '#d9d9d9',\r\n        '#bc80bd',\r\n        '#ccebc5',\r\n        '#ffed6f',\r\n        '#8dd3c7',\r\n        '#ffffb3',\r\n        '#bebada',\r\n        '#fb8072',\r\n        '#80b1d3',\r\n        '#fdb462',\r\n        '#b3de69',\r\n    ],\r\n}",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\r\nproperties change"
      },
      "dashEvents": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'click'",
              "computed": false
            },
            {
              "value": "'hover'",
              "computed": false
            },
            {
              "value": "'unhover'",
              "computed": false
            },
            {
              "value": "'selected'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": ""
      },
      "fireEvent": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function that fires events"
      }
    }
  }
}
